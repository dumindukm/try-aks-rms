trigger:
  branches:
    include:
    - '*'

variables:
  buildConfiguration: 'Release'
  webRepository: 'dumindukm/rmssln'
  tag: '$(Build.BuildId)'
  WebAppName: 'rmsweb-cnt'
  imagePullSecret: 'dockertoken'
  dockerhub-servicecnt: 'dockerhub'
  k8sNamespace: 'rms-k8s-namespace'
  aks-env : 'Staging'

stages:
- stage: 'Build'
  displayName: 'Build the Web App'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
    pool:
      vmImage: ubuntu-latest

    steps:
    - template: docker-build-push.yml
      parameters:
        dockerhubServicecnt: '$(dockerhub-servicecnt)'
        tag: $(tag)
        projectPath: 'src/rms-web/Rms.Pos/Rms.Web'
        dockerRepo: $(webRepository)
    
    - publish: '$(Build.SourcesDirectory)/deployment_scripts/k8s'
      artifact: manifests

- stage: 'Prepare_Deploy'
  displayName: 'prepare Deploy the settings'
  dependsOn: Build
  jobs:
  - job: 'Prepare_appsettings_Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-latest'    
    variables:
      SiteText : 'site text from pipeline aks staging'
      GatewayBaseUrl: 'http://rms-gateway-inl-svr:54377/'
    steps:
      - publish: '$(Build.SourcesDirectory)/src/rms-web/Rms.Pos/Rms.Web/appsettings.json'
        artifact: rmswebsettingjson
      - download: current
        artifact: rmswebsettingjson
      - task: FileTransform@1
        displayName: 'File transformation: appsettings.json'
        inputs:
          folderPath: '$(Pipeline.Workspace)/rmswebsettingjson'
          targetFiles: 'appsettings.json'
          fileType: json
      - publish: '$(Pipeline.Workspace)/rmswebsettingjson/appsettings.json'
        artifact: rmswebsettingjsontf
      # - download: current
      #   artifact: rmswebsettingjson
- stage : 'Deployment_aks'
  displayName: 'prepare Deploy the settings'
  dependsOn: Prepare_Deploy
  jobs:
  - deployment: Deploy
    environment: rmsstage
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests
          - download: current
            artifact: rmswebsettingjsontf
          - task: KubernetesManifest@0
            displayName: kubectl create namespace
            inputs:
              action: deploy
              kubernetesServiceConnection: 'aks-con'
              namespace: $(k8sNamespace)
              manifests: |
                $(Pipeline.Workspace)/manifests/rms-namespace.yaml
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: '$(dockerhub-servicecnt)'
              kubernetesServiceConnection: 'aks-con'
              namespace: '$(k8sNamespace)'
          
          - task: Kubernetes@1
            displayName: 'Create ConfigMap for /appsettings'
            inputs:
              kubernetesServiceEndpoint: 'aks-con'
              namespace: '$(k8sNamespace)'
              forceUpdateConfigMap: true
              configMapName: 'json-configmap'
              configMapArguments: '--from-file $(Pipeline.Workspace)/rmswebsettingjsontf/appsettings.json'
          - task: Kubernetes@1
            displayName: 'Create ConfigMap for env'
            inputs:
              kubernetesServiceEndpoint: 'aks-con'
              namespace: '$(k8sNamespace)'
              forceUpdateConfigMap: true
              configMapName: 'rms-web-env-config'
              configMapArguments: --from-literal=RUN_ENVIRONEMNT=$(aks-env)
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: 'aks-con'
              namespace: $(k8sNamespace)
              manifests: |
                $(Pipeline.Workspace)/manifests/rms-web.yaml
# $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(webRepository):$(tag)
# $(RegistryName)/$(leaderboardRepository):$(tag)