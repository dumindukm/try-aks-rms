trigger:
- master

variables:
  buildConfiguration: 'Release'
  webRepository: 'dumindukm/rmssln'
  tag: '$(Build.BuildId)'
  WebAppName: 'rmsweb-cnt'

stages:
- stage: 'Build'
  displayName: 'Build the Web App'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
    pool:
      vmImage: ubuntu-latest

    steps:
    #- script: dotnet build --configuration $(buildConfiguration)
    #  displayName: 'dotnet build $(buildConfiguration)'
    # - task: DotNetCoreCLI@2
    #   displayName: 'Restore project dependencies'
    #   inputs:
    #     command: 'restore'
    #     projects: '**/Rms.Web.csproj'

    # - task: DotNetCoreCLI@2
    #   displayName: 'Build the project - $(buildConfiguration)'
    #   inputs:
    #     command: 'build'
    #     arguments: '--no-restore --configuration $(buildConfiguration)'
    #     projects: '**/Rms.Web.csproj'
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)/src/rms-web/Rms.Pos/Rms.Web
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/src/rms-web/Rms.Pos/Rms.Web/Dockerfile'
        containerRegistry: '$(dockerhub-servicecnt)'
        tags: |
          $(tag)
- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-latest'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(WebAppName)
       azureSubscription: '$(azsub-servicecnt)'
       imageName: $(webRepository):$(tag)