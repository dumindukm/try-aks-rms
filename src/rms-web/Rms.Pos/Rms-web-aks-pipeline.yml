trigger:
  branches:
    include:
    - '*'

variables:
  buildConfiguration: 'Release'
  webRepository: 'dumindukm/rmssln'
  tag: '$(Build.BuildId)'
  WebAppName: 'rmsweb-cnt'
  imagePullSecret: 'dockerToken'

stages:
- stage: 'Build'
  displayName: 'Build the Web App'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'
    pool:
      vmImage: ubuntu-latest

    steps:
    - template: docker-build-push.yml
      parameters:
        dockerhubServicecnt: '$(dockerhub-servicecnt)'
        tag: $(tag)
        projectPath: 'src/rms-web/Rms.Pos/Rms.Web'
        dockerRepo: $(webRepository)
    
    - publish: '$(Build.SourcesDirectory)/deployment_scripts/k8s'
      artifact: manifests

- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-latest'    
    variables:
      SiteText : 'site text from aks staging'
      GatewayBaseUrl: 'http://rms-gateway-inl-svr:54377/'
    steps:
      - publish: '$(Build.SourcesDirectory)/src/rms-web/Rms.Pos/Rms.Web/appsettings.json'
        artifact: rms-web-setting-json
      - task: FileTransform@1
        displayName: 'File transformation: appsettings.json'
        inputs:
          folderPath: '$(Build.ArtifactStagingDirectory)/rms-web-setting-json.zip'
          targetFiles: '**/appsettings.json'
          fileType: json
      - deployment: Deploy
        environment: rmsstage
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: manifests
              - task: KubernetesManifest@0
                displayName: Create imagePullSecret
                inputs:
                  action: createSecret
                  secretName: $(imagePullSecret)
                  dockerRegistryEndpoint: '$(dockerhub-servicecnt)'
                  kubernetesServiceConnection: 'aks-con'
                  namespace: 'default'
              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster
                inputs:
                  action: deploy
                  kubernetesServiceConnection: 'aks-con'
                  namespace: 'default'
                  manifests: |
                    $(Pipeline.Workspace)/deployment_scripts/k8s/rms-web.yaml
    # $(Pipeline.Workspace)/manifests/service.yml
                  imagePullSecrets: |
                    $(imagePullSecret)
                  containers: |
                    $(webRepository):$(tag)
    # $(RegistryName)/$(leaderboardRepository):$(tag)